@{
    ViewData["Title"] = "Home";
}

<div class="text-center">
    <p>Enter information below to generate a sitemap:</p>
    <form method="get" action="api/webcrawler">
        URL : <input type="url" name="url" /><br />
        Email : <input type="email" name="email" /><br />
        Files : <input type="checkbox" name="files" value="true" /><br />
        <input type="hidden" name="files" value="false" />
        Robots : <input type="checkbox" name="robots" value="true" /><br />
        <input type="hidden" name="robots" value="false" />
        <input id="endpoint" name="endpoint" hidden />
        <input id="p256dh" name="p256dh" hidden />
        <input id="auth" name="auth" hidden />
        <input type="submit" value="Submit" />
    </form>
</div>

@section Scripts {
    <script>
        if ('serviceWorker' in navigator) {
            window.addEventListener("load", () => {
                navigator.serviceWorker.register("js/serviceworker.js")
                    .then((reg) => {
                        if (Notification.permission === "granted") {
                            getSubscription(reg);
                        } else if (Notification.permission === "blocked") {
                            $("#NoSupport").show();
                        } else {
                            requestNotificationAccess(reg);
                        }
                    });
            });
        } else {
            $("#NoSupport").show();
        }

        function requestNotificationAccess(reg) {
            Notification.requestPermission(function (status) {
                $("#GiveAccess").hide();
                if (status == "granted") {
                    getSubscription(reg);
                } else {
                    $("#NoSupport").show();
                }
            });
        }

        function getSubscription(reg) {
            reg.pushManager.getSubscription().then(function (sub) {
                if (sub === null) {
                    reg.pushManager.subscribe({
                        userVisibleOnly: true,
                        applicationServerKey: "@ViewBag.ApplicationServerKey"
                    }).then(function (sub) {
                        fillSubscribeFields(sub);
                    }).catch(function (e) {
                        console.error("Unable to subscribe to push", e);
                    });
                } else {
                    fillSubscribeFields(sub);
                }
            });
        }

        function fillSubscribeFields(sub) {
            $("#endpoint").val(sub.endpoint);
            $("#p256dh").val(arrayBufferToBase64(sub.getKey("p256dh")));
            $("#auth").val(arrayBufferToBase64(sub.getKey("auth")));
        }

        function arrayBufferToBase64(buffer) {
            var binary = '';
            var bytes = new Uint8Array(buffer);
            var len = bytes.byteLength;
            for (var i = 0; i < len; i++) {
                binary += String.fromCharCode(bytes[i]);
            }
            return window.btoa(binary);
        }
    </script>
}